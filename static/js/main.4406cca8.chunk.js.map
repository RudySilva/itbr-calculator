{"version":3,"sources":["MyComponents/ButtonAppBar.js","MyComponents/ResponsiveTypography.js","MyComponents/CriteriaOptions.js","MyComponents/Criteria.js","MyComponents/CategoryIcon.js","MyComponents/TabCategories.js","MyComponents/CategoriesScore.js","MyComponents/Score.js","MyComponents/QuestionnaireControl.js","MyComponents/Questionnaire.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","toolbar","textAlign","ButtonAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","createMuiTheme","ResponsiveTypography","props","Fragment","ThemeProvider","text","responsiveFontSizes","width","backgroundColor","palette","background","paper","inline","display","CriteriaOptions","Requirements","item","undefined","requirements","map","req","index","key","component","color","description","List","criteriaItems","ListItem","alignItems","ListItemAvatar","Radio","checked","selectedCriterias","category","onChange","changeEvent","selectedOption","points","handleCheckBoxChange","value","name","inputProps","ListItemText","primary","secondary","length","Divider","question","padding","Criteria","align","criteria","headLineQuestion","options","CategoryIcon","param","toLowerCase","renderIcon","TabPanel","children","other","role","hidden","id","aria-labelledby","Box","p","TabCategories","React","useState","setValue","Tabs","event","newValue","scrollButtons","indicatorColor","textColor","aria-label","questionnaire","Tab","label","a11yProps","icon","tabPanel","CategoriesScore","categories","TableContainer","Table","table","TableHead","TableRow","TableCell","TableBody","Object","keys","console","log","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","secondBox","marginLeft","Score","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","total","orientation","ExpansionPanelDetails","mainBox","tab","marginTop","QuestionnaireControl","height","Grid","container","xs","questionnairaData","require","questionnaireResponse","categoryPoints","selectCriteria","option","Questionnaire","response","updateResponse","pointsToAdd","reduce","acumulator","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4406cca8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  toolbar:{\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.toolbar}>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            IT.BR Australia\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nexport default function ResponsiveTypography(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeProvider theme={theme}>\r\n        <Typography {...props} variant={props.variant}>{props.text}</Typography>\r\n      </ThemeProvider>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport { List, ListItem, ListItemAvatar, ListItemText, Divider } from '@material-ui/core';\r\nimport ResponsiveTypography from \"../MyComponents/ResponsiveTypography\"\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'block',\r\n    }\r\n}));\r\n\r\nexport default function CriteriaOptions(props) {\r\n    const classes = useStyles();\r\n\r\n    const handleCheckBoxChange = changeEvent => {\r\n        props.handleCheckBoxChange(changeEvent);\r\n    }\r\n\r\n    function Requirements(item) {\r\n        return <React.Fragment>\r\n            {item.requirements === undefined ? <span></span> :\r\n                item.requirements.map((req, index) => {\r\n                    return (<ResponsiveTypography key={index} component=\"span\" variant=\"body2\" className={classes.inline} color=\"textSecondary\" text={req.description} />);\r\n                })}\r\n        </React.Fragment>;\r\n    }\r\n\r\n    return (\r\n        <List className={classes.root}>\r\n            {\r\n                props.criteriaItems.map((item, index) => {\r\n                    return (\r\n                        <React.Fragment key={index}>\r\n                            <ListItem alignItems=\"center\">\r\n                                <ListItemAvatar>\r\n                                    <Radio\r\n                                        checked={props.selectedCriterias[props.category] === item.description}\r\n                                        onChange={() => { handleCheckBoxChange({ selectedOption: item.description, points: item.points, category: props.category }) }}\r\n                                        key={index}\r\n                                        value={item.description}\r\n                                        name=\"radio-button-demo\"\r\n                                        color=\"primary\"\r\n                                        inputProps={{ 'aria-label': 'A' }} />\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={\r\n                                        <React.Fragment>\r\n                                            <ResponsiveTypography\r\n                                                component=\"span\"\r\n                                                variant=\"h6\"\r\n                                                className={classes.inline}\r\n                                                color=\"textSecondary\"\r\n                                                text={`${item.description} (${item.points} points)`}\r\n                                            />\r\n                                        </React.Fragment>}\r\n                                    secondary={Requirements(item)}\r\n                                    key={index}\r\n                                />\r\n                            </ListItem>\r\n                            {\r\n                                (index + 1) === props.criteriaItems.length ? <span></span> :\r\n                                    <Divider variant=\"inset\" component=\"li\" />\r\n                            }\r\n                        </React.Fragment>\r\n                    )\r\n                })\r\n            }\r\n        </List>\r\n    );\r\n}","import React from 'react';\r\nimport CriteriaOptions from './CriteriaOptions';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport ResponsiveTypography from \"../MyComponents/ResponsiveTypography\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    question: {\r\n        padding: 10\r\n    },\r\n}));\r\n\r\nexport default function Criteria(props) {\r\n    const classes = useStyles();\r\n    return (\r\n    <React.Fragment >\r\n        <ResponsiveTypography\r\n            align={'left'}\r\n            color=\"textPrimary\"\r\n            variant=\"h4\"\r\n            text={props.criteria.headLineQuestion} \r\n            className={classes.question}\r\n        />\r\n\r\n        <CriteriaOptions\r\n            category={props.criteria.category}\r\n            criteriaItems={props.criteria.options}\r\n            handleCheckBoxChange={props.handleCheckBoxChange}\r\n            selectedCriterias={props.selectedCriterias}\r\n        />\r\n    </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport FaceOutlinedIcon from '@material-ui/icons/FaceOutlined';\r\nimport AssignmentOutlinedIcon from '@material-ui/icons/AssignmentOutlined';\r\nimport LanguageOutlinedIcon from '@material-ui/icons/LanguageOutlined';\r\nimport WorkOutlineOutlinedIcon from '@material-ui/icons/WorkOutlineOutlined';\r\nimport WorkOutlinedIcon from '@material-ui/icons/WorkOutlined';\r\nimport SchoolOutlinedIcon from '@material-ui/icons/SchoolOutlined';\r\nimport LocalLibraryOutlinedIcon from '@material-ui/icons/LocalLibraryOutlined';\r\nimport CollectionsBookmarkOutlinedIcon from '@material-ui/icons/CollectionsBookmarkOutlined';\r\nimport GTranslateOutlinedIcon from '@material-ui/icons/GTranslateOutlined';\r\nimport GroupOutlinedIcon from '@material-ui/icons/GroupOutlined';\r\nimport PlusOneOutlinedIcon from '@material-ui/icons/PlusOneOutlined';\r\n\r\nconst renderIcon = (param) => {\r\n  switch (param.toLowerCase()) {\r\n    case 'visa subclass':\r\n      return <AssignmentOutlinedIcon />;\r\n    case 'age':\r\n      return <FaceOutlinedIcon />;\r\n    case 'english language':\r\n      return <LanguageOutlinedIcon />;\r\n    case 'overseas work experience':\r\n      return <WorkOutlineOutlinedIcon />;\r\n    case 'australian work experience':\r\n      return <WorkOutlinedIcon />;\r\n    case 'educational qualifications':\r\n      return <SchoolOutlinedIcon />;\r\n    case 'australian educational qualification':\r\n      return <LocalLibraryOutlinedIcon />;\r\n    case 'specialist educational qualification':\r\n      return <CollectionsBookmarkOutlinedIcon />;\r\n    case 'accredited community language':\r\n      return <GTranslateOutlinedIcon />;\r\n    case 'partner qualifications':\r\n      return <GroupOutlinedIcon />;\r\n    case 'professional year in australia':\r\n      return <PlusOneOutlinedIcon />;\r\n    default:\r\n      return <HelpIcon />;\r\n  }\r\n}\r\n\r\n\r\nexport default function CategoryIcon(props) {\r\n  return (\r\n    <div>\r\n      {renderIcon(props.category)}\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ResponsiveTypography from '../MyComponents/ResponsiveTypography';\r\nimport Criteria from './Criteria';\r\nimport CategoryIcon from './CategoryIcon';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-force-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-force-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={1}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-force-tab-${index}`,\r\n        'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function TabCategories(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"on\"\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    aria-label=\"scrollable force tabs example\"\r\n                >\r\n                    {\r\n                        props.questionnaire.map((criteria, index) =>\r\n                            <Tab\r\n                                key={index}\r\n                                label={<ResponsiveTypography text={criteria.category} variant=\"subtitle2\" {...props}/>}\r\n                                {...a11yProps(index)} \r\n                                icon={<CategoryIcon category={criteria.category} />}\r\n                            />\r\n                        )\r\n                    }\r\n                </Tabs>\r\n            </AppBar>\r\n            {\r\n                props.questionnaire.map((criteria, index) => {\r\n                    return (\r\n                        <TabPanel key={index} value={value} index={index} className={classes.tabPanel}>\r\n                            <Criteria\r\n                                criteria={criteria}\r\n                                handleCheckBoxChange={props.handleCheckBoxChange}\r\n                                selectedCriterias={props.selectedCriterias} />\r\n                        </TabPanel>)\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function CategoriesScore(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n\r\n\r\n    <List className={classes.root}>\r\n        {\r\n                props.categories === undefined ? <span>none</span> :\r\n                <TableContainer>\r\n                  <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell align=\"center\">Category</TableCell>\r\n                        <TableCell align=\"center\">Your Points</TableCell>\r\n                        {/* <TableCell align=\"center\">Max Possible</TableCell> */}\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {Object.keys(props.categories).map((key, index) => (\r\n                        <TableRow key={key}>\r\n                          {console.log(props.categories[key])}\r\n                          <TableCell align=\"center\">{key}</TableCell>\r\n                          <TableCell align=\"center\">{props.categories[key]}</TableCell>\r\n                          {/* <TableCell align=\"right\"></TableCell> */}\r\n                          {/*<TableCell align=\"right\"></TableCell> */}\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n            }\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, Box, Divider,} from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ResponsiveTypography from '../MyComponents/ResponsiveTypography';\r\nimport CategoriesScore from './CategoriesScore';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    secondBox: {\r\n        marginLeft: '10px'\r\n    }\r\n}));\r\n\r\nexport default function Score(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ExpansionPanel>\r\n                <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\" >\r\n                    <Box>\r\n                        <ResponsiveTypography\r\n                            component=\"span\"\r\n                            variant=\"h6\"\r\n                            color=\"primary\"\r\n                            text={\"Your Score\"}\r\n                            \r\n                        />\r\n                        <ResponsiveTypography \r\n                            variant=\"h4\"\r\n                            text={props.total} />\r\n                    </Box>\r\n                    <Divider orientation=\"vertical\" />\r\n                    <Box className={classes.secondBox}>\r\n                        <ResponsiveTypography\r\n                            component=\"span\"\r\n                            variant=\"h6\"\r\n                            color=\"primary\"\r\n                            text={\"Min Score\"}\r\n                            \r\n                        />\r\n                        <ResponsiveTypography \r\n                            variant=\"h4\"\r\n                            text={\"65\"} />\r\n                    </Box>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <CategoriesScore categories={props.categories} />\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Box, Grid, makeStyles } from '@material-ui/core';\r\nimport TabCategories from './TabCategories';\r\nimport Score from './Score';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    mainBox: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.primary,\r\n    },\r\n    tab:{\r\n        marginTop: '10px'\r\n    },\r\n  }));\r\n\r\nexport default function QuestionnaireControl(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.mainBox} height={100}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Score \r\n                        total={props.total} \r\n                        categories={props.categories} />\r\n                    <br></br>\r\n                    <TabCategories\r\n                        questionnaire={props.questionnaire}\r\n                        handleCheckBoxChange={props.handleCheckBoxChange}\r\n                        selectedCriterias={props.selectedCriterias}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Box>)\r\n}","import React, { useState } from 'react';\r\nimport QuestionnaireControl from './QuestionnaireControl';\r\n\r\nlet questionnairaData = require('../quiz_data.json')\r\n\r\nconst questionnaireResponse = {\r\n  categoryPoints: {},\r\n  selectedCriterias: {},\r\n  total: 0,\r\n}\r\n\r\nconst calcTotal = (pointsToAdd, category) => {\r\n  questionnaireResponse.categoryPoints[category] = pointsToAdd;\r\n  return Object.keys(questionnaireResponse.categoryPoints)\r\n                .reduce((acumulator, value) => acumulator += questionnaireResponse.categoryPoints[value], 0);\r\n};\r\n\r\nconst selectCriteria = (option, category) => {\r\n  questionnaireResponse.selectedCriterias[category] = option;\r\n  return questionnaireResponse.selectedCriterias;\r\n}\r\n\r\nexport default function Questionnaire(props) {\r\n  const [questionnaire] = useState(questionnairaData);\r\n  const [response, updateResponse] = useState(questionnaireResponse);\r\n\r\n  const handleCheckBoxChange = changeEvent => {\r\n    updateResponse(\r\n      {\r\n        total: calcTotal(changeEvent.points, changeEvent.category),\r\n        selectedCriterias: selectCriteria(changeEvent.selectedOption, changeEvent.category)\r\n      });\r\n  }\r\n\r\n  return (\r\n    <QuestionnaireControl\r\n      total={response.total}\r\n      questionnaire={questionnaire}\r\n      categories={questionnaireResponse.categoryPoints}\r\n      handleCheckBoxChange={handleCheckBoxChange}\r\n      selectedCriterias={response.selectedCriterias}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\nimport ButtonAppBar from './MyComponents/ButtonAppBar'\nimport './App.css';\nimport Questionnaire from './MyComponents/Questionnaire';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ButtonAppBar />\n      <Questionnaire />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}